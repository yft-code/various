{"version":3,"sources":["webpack:///./src/views/vuex/index.vue","webpack:///./src/utils/scoket/webscoket.js","webpack:///src/views/vuex/index.vue","webpack:///./src/views/vuex/index.vue?5cae","webpack:///./src/views/vuex/index.vue?32d9"],"names":["render","_vm","this","_c","_self","on","createApp","_v","getHistory","uploadDown","attrs","getUploadMeg","staticClass","staticStyle","staticRenderFns","serverIpPort","lockReconnect","wsUrl","websocket","tt","num","disconnectWebSocket","messageList","Base","versionObj","currentVersion","mustVersion","recommandVersion","createApplication","Promise","resolve","ajaxGetRequest","res","console","log","then","errorCode","createWebSocket","application","body","appId","exitApplication","params","name","url","data","sendMes","getApplication","createWindow","windowInfo","send","showWindow","windowId","param","windowIdList","forEach","item","hideWindow","closeWindow","filter","setWindowRect","setWindowTop","isTop","bindWindow","id","length","push","locationInfo","getLocationInfo","updataWindow","flag","setIntervalFun","setInterval","clearInterval","hSpace","height","$","window","JSON","stringify","rest","left","top","width","document","title","elt","getElementById","ua","navigator","userAgent","test","screen","availHeight","outerHeight","innerHeight","Math","floor","screenX","getBoundingClientRect","getZoomScale","screenY","screenLeft","sendAction","command","args","checkUpgrade","cutPartWindow","repairPartWindow","setCallback","evt","callbackFunc","setWindowWaterMask","waterInfo","setWindowStyle","windowStyle","WebSocket","init","alert","e","onerror","reconnect","onopen","onmessage","event","parse","message","eventName","menuName","onclose","clearTimeout","setTimeout","obj","callback","readyState","successCallback","ajaxOptions","method","success","result","error","err","indexOf","ajax","ratio","toLowerCase","undefined","devicePixelRatio","deviceXDPI","logicalXDPI","outerWidth","innerWidth","windowType","timer","appInfo","curWinId","videoList","methods","status","speed","downloadSize","timeLeft","progress","recordTime","one","transVersion","sessionStorage","versionInfo","showVideo","type","layout","broadCast","fileBroadCast","tabIndex","ratioMode","playType","component"],"mappings":"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","file":"static/js/chunk-2d0c8d9d.03b8c6fd.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-button',{on:{\"click\":_vm.createApp}},[_vm._v(\"开始启动\")]),_c('el-button',{on:{\"click\":_vm.getHistory}},[_vm._v(\"获取历史记录\")]),_c('el-button',{on:{\"click\":_vm.uploadDown}},[_vm._v(\"下载\")]),_c('span',[_vm._v(\"下载句柄:\")]),_c('input',{attrs:{\"type\":\"text\",\"id\":\"downloadHandle\",\"value\":\"\"}}),_c('div',{on:{\"click\":_vm.getUploadMeg}},[_vm._v(\"获取下载信息\")]),_c('div',{staticClass:\"info\"}),_c('div',{staticClass:\"video\",staticStyle:{\"height\":\"0\",\"width\":\"0\"},attrs:{\"id\":\"video\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import $ from 'jquery'\r\nconst serverIpPort = 'http://127.0.0.1:58088'\r\nlet lockReconnect = false //避免重复连接\r\nlet wsUrl = \"ws://127.0.0.1:58089\"\r\nlet websocket = null\r\nlet tt = null\r\nlet num = 0\r\n// let versionInfo={}\r\nlet disconnectWebSocket = false\r\nlet messageList = {}\r\nlet Base = {\r\n    // 版本信息\r\n    versionObj: function () {\r\n        return {\r\n            currentVersion: '1.3.0', // 当前js版本,需手动更新\r\n            mustVersion: '1.0.0', // 必须升级插件\r\n            recommandVersion: '1.1.0' // 推荐升级插件\r\n        }\r\n    },\r\n    // 初始化创建应用\r\n    createApplication: function () {\r\n        return new Promise((resolve) => {\r\n            ajaxGetRequest(serverIpPort, (res) => {\r\n                console.log('resssss',res);\r\n                return resolve(res)\r\n            })\r\n        }).then((res) => {\r\n            if (res.errorCode === 0) {\r\n                createWebSocket()\r\n                res['application'] = application(res.body.appId)\r\n            }\r\n            return res\r\n        })\r\n    },\r\n\r\n    // 退出应用，关闭所有窗口，清理资源\r\n    exitApplication: function (appId) {\r\n        let params = {\r\n            name: '/v1/exit-application',\r\n            url: serverIpPort + '/v1/exit-application',\r\n            data: {\r\n                'appId': appId\r\n            }\r\n        }\r\n        return new Promise((resolve) => {\r\n            sendMes(params, function (res) {\r\n                return resolve(res)\r\n            })\r\n        }).then((res) => {\r\n            return res\r\n        })\r\n    },\r\n\r\n    // 刷新获取应用\r\n    getApplication: function (appId) {\r\n        createWebSocket()\r\n        return application(appId)\r\n    },\r\n\r\n}\r\n\r\nfunction application(appId) {\r\n    // 打开插件窗口，指定窗口类型\r\n    return {\r\n        appId,\r\n        createWindow: function (windowInfo) {\r\n            windowInfo['appId'] = this.appId\r\n            let params = {\r\n                name: '/v1/create-window',\r\n                url: serverIpPort + '/v1/create-window',\r\n                data: windowInfo\r\n            }\r\n            return send(params)\r\n        },\r\n\r\n        // 展示窗口\r\n        showWindow: function (windowId) {\r\n            const param = {\r\n                windowId,\r\n                appId: this.appId\r\n            }\r\n            let params = {\r\n                name: '/v1/show-window',\r\n                url: serverIpPort + '/v1/show-window',\r\n                data: param\r\n            }\r\n            return new Promise((resolve) => {\r\n                sendMes(params, function (res) {\r\n                    return resolve(res)\r\n                })\r\n            }).then((res) => {\r\n                if (res.errorCode === 0) {\r\n                    this.windowIdList.forEach(item => {\r\n                        if (item['windowId'] === windowId) {\r\n                            item['showWindow'] = true\r\n                        }\r\n                    })\r\n                }\r\n                return res\r\n            })\r\n        },\r\n\r\n        // 隐藏窗口\r\n        hideWindow: function (windowId) {\r\n            let params = {\r\n                name: '/v1/hide-window',\r\n                url: serverIpPort + '/v1/hide-window',\r\n                data: {\r\n                    windowId,\r\n                    appId: this.appId\r\n                }\r\n            }\r\n            return new Promise((resolve) => {\r\n                sendMes(params, function (res) {\r\n                    return resolve(res)\r\n                })\r\n            }).then((res) => {\r\n                if (res.errorCode === 0) {\r\n                    this.windowIdList.forEach(item => {\r\n                        if (item['windowId'] === windowId) {\r\n                            item['showWindow'] = false\r\n                        }\r\n                    })\r\n                }\r\n                return res\r\n            })\r\n        },\r\n\r\n        // 关闭窗口\r\n        closeWindow: function (windowId) {\r\n            let params = {\r\n                name: '/v1/close-window',\r\n                url: serverIpPort + '/v1/close-window',\r\n                data: {\r\n                    windowId,\r\n                    appId: this.appId\r\n                }\r\n            }\r\n            return new Promise((resolve) => {\r\n                sendMes(params, function (res) {\r\n                    return resolve(res)\r\n                })\r\n            }).then((res) => {\r\n                if (res.errorCode === 0) {\r\n                    this.windowIdList = this.windowIdList.filter(item => {\r\n                        return item.windowId != windowId\r\n                    })\r\n                }\r\n                return res\r\n            })\r\n        },\r\n\r\n        // 设置窗口位置和大小\r\n        setWindowRect: function (windowInfo) {\r\n            windowInfo['appId'] = this.appId\r\n            let params = {\r\n                name: '/v1/set-window-rect',\r\n                url: serverIpPort + '/v1/set-window-rect',\r\n                data: windowInfo\r\n            }\r\n            return send(params)\r\n        },\r\n\r\n        // 退出应用，关闭所有窗口，清理资源\r\n        exitApplication: function () {\r\n            let params = {\r\n                name: '/v1/exit-application',\r\n                url: serverIpPort + '/v1/exit-application',\r\n                data: {\r\n                    'appId': appId\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n\r\n        // 设置窗口层级\r\n        setWindowTop: function (windowId, isTop) {\r\n            let params = {\r\n                name: '/v1/set-window-top',\r\n                url: serverIpPort + '/v1/set-window-top',\r\n                data: {\r\n                    windowId,\r\n                    isTop,\r\n                    appId: this.appId\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n\r\n        windowIdList: [],\r\n        // 绑定位置信息\r\n        bindWindow: function (id, windowId) {\r\n            const num = this.windowIdList.filter(item => item.windowId === windowId).length\r\n            if (num === 0) {\r\n                this.windowIdList.push({\r\n                    windowId,\r\n                    locationInfo: this.getLocationInfo(id),\r\n                    id,\r\n                    showWindow: false\r\n                })\r\n            }\r\n            this.updataWindow()\r\n        },\r\n        updataWindow: function () {\r\n            let flag = true\r\n            // 定时更新面板大小位置信息\r\n            let setIntervalFun = setInterval(() => {\r\n                if (this.windowIdList.length === 0) {\r\n                    clearInterval(setIntervalFun)\r\n                }\r\n                this.windowIdList.forEach(item => {\r\n                    // 规避：F11全屏后,高度变化1px,触发setWindowRect，导致点击全屏按钮不生效\r\n                    const hSpace = item['locationInfo'].height - this.getLocationInfo(item['id']).height\r\n                    $(window).on('resize', () => {\r\n                        flag = false\r\n                    })\r\n                    if (flag && JSON.stringify(item['locationInfo']) !== JSON.stringify(this.getLocationInfo(item['id'])) && item['showWindow'] && hSpace !== 1) {\r\n                        const rest = this.getLocationInfo(item['id'])\r\n                        const windowInfo = {\r\n                            'windowId': item['windowId'],\r\n                            'left': rest.left,\r\n                            'top': rest.top,\r\n                            'width': rest.width,\r\n                            'height': rest.height,\r\n                            'title': document.title\r\n                        }\r\n                        this.setWindowRect(windowInfo)\r\n                        item['locationInfo'] = this.getLocationInfo(item['id'])\r\n                    }\r\n                    flag = true\r\n                })\r\n            }, 80) // 80毫秒\r\n        },\r\n        // 获取位置信息\r\n        getLocationInfo: function (id) {\r\n            const elt = document.getElementById(id)\r\n            var ua = navigator.userAgent\r\n            if (/firefox/i.test(ua)) {\r\n                const item = screen.availHeight === outerHeight ? 0 : outerHeight === innerHeight ? 0 : outerHeight > innerHeight ? -8 : 8\r\n                return {\r\n                    left: Math.floor(screenX + elt.getBoundingClientRect().left * getZoomScale()),\r\n                    top: Math.floor(screenY + (outerHeight - innerHeight * getZoomScale()) + elt.getBoundingClientRect().top * getZoomScale() + item),\r\n                    width: Math.floor(elt.getBoundingClientRect().width * getZoomScale()),\r\n                    height: Math.floor(elt.getBoundingClientRect().height * getZoomScale()),\r\n                    screenLeft: Math.floor(window.screenLeft)\r\n                }\r\n            } else {\r\n                return {\r\n                    left: Math.floor(elt.getBoundingClientRect().left * getZoomScale()),\r\n                    top: Math.floor(elt.getBoundingClientRect().top * getZoomScale()),\r\n                    width: Math.floor(elt.getBoundingClientRect().width * getZoomScale()),\r\n                    height: Math.floor(elt.getBoundingClientRect().height * getZoomScale()),\r\n                    screenLeft: Math.floor(window.screenLeft)\r\n                }\r\n            }\r\n        },\r\n        // 发送动作指令给窗口\r\n        sendAction: function (windowId, command, args) {\r\n            let params = {\r\n                name: '/v1/send-action-to-window',\r\n                url: serverIpPort + '/v1/send-action-to-window',\r\n                data: {\r\n                    windowId,\r\n                    command,\r\n                    args\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n        // 获取插件升级信息\r\n        checkUpgrade: function () {\r\n            let params = {\r\n                name: '/v1/check-upgrade',\r\n                url: serverIpPort + '/v1/check-upgrade'\r\n            }\r\n            return send(params)\r\n        },\r\n        // 扣除部分插件窗口\r\n        cutPartWindow: function (windowId, left, top, width, height) {\r\n            let params = {\r\n                name: '/v1/cut-part-window',\r\n                url: serverIpPort + '/v1/cut-part-window',\r\n                data: {\r\n                    windowId,\r\n                    left,\r\n                    top,\r\n                    width,\r\n                    height\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n        // 还原扣除插件窗口\r\n        repairPartWindow: function (windowId, left, top, width, height) {\r\n            let params = {\r\n                name: '/v1/repair-part-window',\r\n                url: serverIpPort + '/v1/repair-part-window',\r\n                data: {\r\n                    windowId,\r\n                    left,\r\n                    top,\r\n                    width,\r\n                    height\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n        // 事件通知\r\n        setCallback: function (windowId, evt, callbackFunc) {\r\n            let params = {\r\n                name: '/v1/set-callback',\r\n                url: serverIpPort + '/v1/set-callback',\r\n                data: {\r\n                    windowId,\r\n                    evt,\r\n                    callbackFunc\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n        // 添加水印\r\n        setWindowWaterMask: function (waterInfo) {\r\n            let params = {\r\n                name: '/v1/set-window-watermask',\r\n                url: serverIpPort + '/v1/set-window-watermask',\r\n                data: {\r\n                    waterInfo\r\n                }\r\n            }\r\n            return send(params)\r\n        },\r\n        //设置窗口样式\r\n        setWindowStyle: function (windowStyle) {\r\n            let params = {\r\n                name: '/v1/set-window-style',\r\n                url: serverIpPort + '/v1/create-window',\r\n                data: windowStyle\r\n            }\r\n            return send(params)\r\n        }\r\n    }\r\n}\r\n\r\nfunction send(params) {\r\n    return new Promise((resolve) => {\r\n        sendMes(params, function (res) {\r\n            return resolve(res)\r\n        })\r\n    }).then((res) => {\r\n        return res\r\n    })\r\n}\r\n\r\nfunction createWebSocket() {\r\n    try {\r\n        //判断当前浏览器是否支持WebSocket\r\n        if ('WebSocket' in window) {\r\n            websocket = new WebSocket(wsUrl)\r\n            init()\r\n        } else {\r\n            alert('当前浏览器 Not support websocket')\r\n        }\r\n    } catch (e) {\r\n        console.log('catch')\r\n    }\r\n}\r\n\r\nfunction init() {\r\n    //连接发生错误的回调方法\r\n    websocket.onerror = function () {\r\n        console.log('socket连接失败')\r\n        lockReconnect = false\r\n        reconnect(wsUrl)\r\n    }\r\n    //连接成功建立的回调方法\r\n    websocket.onopen = function () {\r\n        console.log('socket连接已打开')\r\n        num = 0\r\n        lockReconnect = true\r\n    }\r\n    //接收到消息的回调方法\r\n    websocket.onmessage = function (event) {\r\n        //拿到任何消息都说明当前连接是正常的\r\n        console.log('返回值1111:', JSON.parse(event.data))\r\n        const message = JSON.parse(event.data)\r\n        const eventName = message.name\r\n        if (eventName === 'EVENT_SNAPSHOT_CLICK') {\r\n            console.log('抓拍事件返回：', message.body)\r\n        } else if (eventName === 'EVENT_CUSTOM_MENU') {\r\n            console.log('点击按钮名称：', message.body.menuName)\r\n        } else if (eventName === 'EVENT_OPERATE_PANE') {\r\n            console.log('窗格操作事件返回：', message.body)\r\n        } else if (eventName === 'EVENT_STREAM_INFO') {\r\n            console.log('媒体信息通知事件返回：', message.body)\r\n        } else if (eventName === 'EVENT_PLAY_STATE') {\r\n            console.log('播放状态变更事件返回：', message.body)\r\n        } else {\r\n            messageList[eventName](message)\r\n        }\r\n    }\r\n    //连接关闭的回调方法\r\n    websocket.onclose = function () {\r\n        console.log('socket连接已关闭')\r\n        lockReconnect = false\r\n        reconnect(wsUrl)\r\n    }\r\n}\r\n\r\nfunction reconnect(url) {\r\n    if (lockReconnect || disconnectWebSocket) {\r\n        return\r\n    }\r\n    //没连接上会一直重连，设置延迟避免请求过多\r\n    tt && clearTimeout(tt)\r\n    tt = setTimeout(function () {\r\n        if (num > 2) {\r\n            clearTimeout(tt)\r\n            lockReconnect = true\r\n            alert('WebSocket重连失败')\r\n        } else {\r\n            createWebSocket(url)\r\n            lockReconnect = false\r\n            num++\r\n        }\r\n    }, 500)\r\n}\r\n\r\n// 关闭链接\r\nfunction closeWebSocket() {\r\n    disconnectWebSocket = true\r\n    websocket.close()\r\n}\r\n\r\n//发送消息\r\nfunction sendMes(obj, callback) {\r\n    const name = obj.name\r\n    console.log('发送消息', obj)\r\n    messageList[name] = callback\r\n    // 连接成功建立，可以进行通信\r\n    if (websocket.readyState === 1) {\r\n        websocket.send(JSON.stringify(obj))\r\n    }\r\n}\r\n\r\nfunction ajaxGetRequest(url, successCallback) {\r\n    const ajaxOptions = {\r\n        method: 'GET',\r\n        url: url,\r\n        success: (result) => {\r\n            if (successCallback) {\r\n                successCallback(result)\r\n            }\r\n        },\r\n        error: (err) => {\r\n            err = JSON.stringify(err)\r\n            if (err.indexOf('error') > -1) {\r\n                window.alert('未安装MP_Web_Plugin插件，请先安装插件！')\r\n            }\r\n        }\r\n    }\r\n    $.ajax(ajaxOptions)\r\n}\r\n\r\n// 获取浏览器缩放比例\r\nfunction getZoomScale() {\r\n    var ratio = 0\r\n    var screen = window.screen\r\n    var ua = navigator.userAgent.toLowerCase()\r\n    if (window.devicePixelRatio !== undefined) {\r\n        undefined\r\n        ratio = window.devicePixelRatio\r\n    } else if (~ua.indexOf('msie')) {\r\n        undefined\r\n        if (screen.deviceXDPI && screen.logicalXDPI) {\r\n            undefined\r\n            ratio = screen.deviceXDPI / screen.logicalXDPI\r\n        }\r\n    } else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n        undefined\r\n        ratio = window.outerWidth / window.innerWidth\r\n    }\r\n    return ratio\r\n}\r\nexport {\r\n    Base,\r\n    getZoomScale,\r\n    ajaxGetRequest,\r\n    sendMes,\r\n    closeWebSocket,\r\n    reconnect,\r\n    init,\r\n    createWebSocket,\r\n    send,\r\n    application,\r\n\r\n}","<template>\r\n    <div>\r\n      <el-button @click=\"createApp\">开始启动</el-button>\r\n      <el-button @click=\"getHistory\">获取历史记录</el-button>\r\n      <el-button @click=\"uploadDown\">下载</el-button>\r\n      <span>下载句柄:</span>\r\n      <input type=\"text\" id=\"downloadHandle\" value=\"\">\r\n      <div @click=\"getUploadMeg\">获取下载信息</div>\r\n      <div class=\"info\"></div>\r\n       <div id=\"video\" style=\"height:0;width:0\" class=\"video\">\r\n      </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from 'jquery'\r\nimport{ Base, getZoomScale,ajaxGetRequest,sendMes,closeWebSocket,reconnect,init,createWebSocket,send,application} from '../../utils/scoket/webscoket'\r\n export default{\r\n  data(){\r\n   return{\r\n    windowType:'',\r\n    timer:'',\r\n    application:{},\r\n    appInfo:{\r\n    appId: null,\r\n    curWinId: null,\r\n    videoList: []\r\n   }\r\n  }\r\n  },\r\nmethods:{\r\n getUploadMeg(){\r\n// 获取下载信息\r\n  const args = {\r\n    'downloadHandle': $('#downloadHandle').val()\r\n  }\r\n  $('.info').empty();\r\n  this.application.sendAction(this.appInfo.curWinId, 'GET_DOWNLOAD_INFO', args).then((res) => {\r\n    if (res.errorCode !== 0) {\r\n      // showAlert(res.errorMsg);\r\n    }\r\n    let status = res.body.status === 0 ? '暂停' : '下载'; // 0暂停 1下载\r\n    // if ($('#playMode').val() === '0') { // 普通播放模式\r\n    //   $('.info').append(`\r\n    //     <div>下载状态：${status}；</div>\r\n    //     <div>下载速度：${res.body.speed}KB/S；</div>\r\n    //     <div>下载大小：${res.body.downloadSize}KB；</div>\r\n    //     <div>剩余下载时间：${res.body.timeLeft}s；</div>\r\n    //     <div>当前下载进度：${res.body.progress}%；</div>\r\n    //     <div>已下载时间：${res.body.recordTime}s；</div>`)\r\n    // } else {\r\n    //   $('.info').append(`<div>当前下载进度：${res.body.progress}%；</div>`)\r\n    // }\r\n      $('.info').append(`\r\n        <div>下载状态：${status}；</div>\r\n        <div>下载速度：${res.body.speed}KB/S；</div>\r\n        <div>下载大小：${res.body.downloadSize}KB；</div>\r\n        <div>剩余下载时间：${res.body.timeLeft}s；</div>\r\n        <div>当前下载进度：${res.body.progress}%；</div>\r\n        <div>已下载时间：${res.body.recordTime}s；</div>`)\r\n    console.log('res.body',JSON.stringify(res.body));\r\n  });\r\n},\r\n      getHistory(){\r\n        console.log('获取历史记录零零零零');\r\n         this.showVideo('REPLAY_PURE');\r\n      },\r\n      one(){\r\n        Base,\r\n        getZoomScale,ajaxGetRequest,sendMes,closeWebSocket,reconnect,init,createWebSocket,send\r\n      },\r\n      transVersion(version) {\r\n      return Number(version.split('.').join(''));\r\n      },\r\n      createApp(){\r\n      let versionInfo; // 版本信息\r\n      Base.createApplication().then((res) => {\r\n     if (res.errorCode === 0) {\r\n     this.application = res.application;\r\n      console.log('application初始化',this.application);\r\n      this.appInfo.appId = res.body.appId;\r\n      sessionStorage.setItem(\"appId\", this.appInfo.appId);\r\n      versionInfo = Base.versionObj();\r\n      let timer = setTimeout(() => {\r\n        $('.startApp').hide();\r\n        $('.videoPanel').show();\r\n        this.application.checkUpgrade().then(res => {\r\n          if (res.errorCode !== 0) {\r\n            alert(res.errorMsg);\r\n          }\r\n          const pluginVersion = res.body.pluginVersion.substring(12, 17);\r\n          // 插件版本低于js版本 iClient ME V1.1.0_102 Build20211208\r\n          if (this.transVersion(pluginVersion) <this.transVersion(versionInfo.currentVersion)) {\r\n            // 强制升级-当前插件版本低于必须升级的插件版本\r\n            if (this.transVersion(pluginVersion) <= this.transVersion(versionInfo.mustVersion)) {\r\n              alert('当前插件版本过旧，请关闭浏览器升级插件，以免影响正常使用');\r\n            }\r\n            // 推荐升级-当前插件版本低于推荐升级的插件版本\r\n            if (this.transVersion(pluginVersion) <= this.transVersion(versionInfo.recommandVersion) && this.transVersion(pluginVersion) > this.transVersion(versionInfo.mustVersion)) {\r\n              alert('当前插件版本较低，推荐关闭浏览器升级到最新版本');\r\n            }\r\n            // 可选升级\r\n            if (this.transVersion(pluginVersion) > this.transVersion(versionInfo.recommandVersion)) {\r\n              alert('当前插件有新版本，可关闭浏览器升级到最新版本');\r\n            }\r\n          }\r\n        })\r\n        setTimeout(()=>{\r\n          this.getHistory()\r\n        })\r\n        clearTimeout(timer);\r\n      }, 1500) // 1.5秒\r\n    } else {\r\n      alert(res.errorMsg);\r\n    }\r\n  })\r\n},\r\n\r\nshowVideo(type) {\r\n  // if (this.appInfo.videoList.length > 15) {\r\n  //   return alert('最多打开16个窗口')\r\n  // }\r\n  this.windowType = type;\r\n  // const rect = this.application.getLocationInfo('video');\r\n  const windowInfo = {\r\n    'pluginType': type,\r\n    'rect': {\r\n      'left': -1000,\r\n      'top': -1000,\r\n      'width': 0,\r\n      'height': 0\r\n    },\r\n    'title': document.title\r\n  }\r\n  console.log(' windowInfo', windowInfo);\r\n  this.application.createWindow(windowInfo).then((res) => {\r\n    if (res.errorCode === 0) {\r\n      // const windowStyle = {\r\n      //   'loadingGifUrl': \"\",\r\n      //   'loadingText': \"\",\r\n      //   'videoLoadingText': \"\"\r\n      // }\r\n      // this.application.setWindowStyle(windowStyle).then(res => {\r\n      //   if (res.errorCode !== 0) {\r\n      //     alert(res.errorMsg);\r\n      //   }\r\n      // });\r\n      // $('.tab>li').removeClass('active');\r\n      // $('.playTab').addClass('active');\r\n      // $('.tabContent>div').removeClass('showContent');\r\n      // $('.playWraper').addClass('showContent');\r\n     this.appInfo.videoList.push({\r\n        type: type,\r\n        windowId: res.body.windowId,\r\n        layout: \"11\", // 默认1x1布局\r\n        broadCast: '', // 语音广播\r\n        fileBroadCast: '',// 文件广播\r\n        tabIndex: 0, // tab页签索引\r\n        ratioMode: 'FULL',// 视频比例\r\n        playType: '0' // 类型\r\n      });\r\n      // $('#layout').val(\"11\"); // 默认1x1布局\r\n      // $(\"#speed\").val(1); // 回放倍率默认1\r\n      // $('#ratioMode').val(\"FULL\"); // 视频比例默认铺满\r\n      // $('#playType').val(\"0\"); // 类型默认MP\r\n      this.appInfo.curWinId = res.body.windowId;\r\n      sessionStorage.setItem('curWinId', this.appInfo.curWinId);\r\n      sessionStorage.setItem('videoList', JSON.stringify(this.appInfo.videoList));\r\n      // $('.videoList section').removeClass('activeWindow');\r\n      // if (type === 'LIVE_VIDEO_PURE') {\r\n      //   $('.videoList').append(`<section class=\"activeWindow\"><span>实况</span><i data-name=${this.appInfo.curWinId} class=\"close\">X</i></section>`);\r\n      //   $('.threeTab').text('语音功能');\r\n      //   $('.downLoadTab').hide();\r\n      //   $('.channelIdParam').hide();\r\n      //   $('.voiceOptionParam').show();\r\n      //   if ($('#playType').val() === '2') {  // P2P类型\r\n      //     $('.channelIdParam').show();\r\n      //   }\r\n      // } else if (type === 'REPLAY_PURE') {\r\n      //   $('.videoList').append(`<section class=\"activeWindow\"><span>录像回放</span><i data-name=${this.appInfo.curWinId} class=\"close\">X</i></section>`);\r\n      //   $('.threeTab').text('录像控制');\r\n      //   $('.downLoadTab').show();\r\n      //   $('.voiceOptionParam').hide();\r\n      //   if ($('#playType').val() === '2') { // P2P类型\r\n      //     $('.channelIdParam').show();\r\n      //   } else {\r\n      //     $('.channelIdParam').hide();\r\n      //   }\r\n      // }\r\n      // $('.videoItem').hide();\r\n      // $('.videoContent').show();\r\n      const rect = this.application.getLocationInfo('video');\r\n      // const windowInfo = {\r\n      //   'windowId': this.appInfo.curWinId,\r\n      //   'left': rect.left,\r\n      //   'top': rect.top,\r\n      //   'width': rect.width,\r\n      //   'height': rect.height,\r\n      //   'title': document.title\r\n      // }\r\n      // this.application.setWindowRect(windowInfo);\r\n      // 绑定窗口信息\r\n      // this.application.bindWindow('video', this.appInfo.curWinId);\r\n      // this.application.showWindow(this.appInfo.curWinId).then((res) => {\r\n      //   if (res.errorCode === 0) {\r\n      //     this.application.setWindowTop(this.appInfo.curWinId, true); // 窗口置顶\r\n      //   } else {\r\n      //     alert(res.errorMsg);\r\n      //   }\r\n      // });\r\n    } else {\r\n      alert(res.errorMsg);\r\n    }\r\n  });\r\n},\r\n// 实现下载\r\n  uploadDown(){\r\n        // 启动下载\r\n  const args = {\r\n    'url': 'rtsp://117.174.152.90:33554/00054381710408220101?DstCode=01&ServiceType=3&ClientType=0&StreamID=1&SrcTP=2&DstTP=2&SrcPP=1&DstPP=1&MediaTransMode=0&BroadcastType=0&SV=1&TimeSpan=20220927T000000Z-20220927T010000Z&Token=CTkPlzfzWSlB+66JoyxooKezRFw6JiyRPqQvi+YsR0k=&ExNat=1&',\r\n    'playType': '0',\r\n    'namePrefix': '1111',\r\n    'speed': '',\r\n    'timeSpan':{'BeginTime':'20220927000000',\r\n           'EndTime':'20220927010000'},\r\n  }\r\n  console.log('xxxxxxargs',args);\r\n  // if ($('#playMode').val() === '0') { // 普通播放模式\r\n  //   args['timeSpan'] = {\r\n  //     'BeginTime': $('#loadBeginTime').val(),\r\n  //     'EndTime': $('#loadEndTime').val()\r\n  //   };\r\n  // } else {\r\n  //   args['extend'] = $('#cloudExtend').val()\r\n  // }\r\n  this.application.sendAction(this.appInfo.curWinId, 'START_DOWNLOAD', args).then((res) => {\r\n    if (res.errorCode !== 0) {\r\n      // showAlert(res.errorMsg);\r\n    }\r\n    console.log('下载句柄：' + res.body.downloadHandle);\r\n  });\r\n      },\r\n    }\r\n }\r\n</script>\r\n\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0e8ed5c4&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}